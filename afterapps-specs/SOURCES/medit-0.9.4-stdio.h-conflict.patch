--- moo/moolua/ldebug.c	2008-08-25 01:17:21.000000000 -0500
+++ moo/moolua/ldebug.c	2009-08-01 09:29:29.000000000 -0500
@@ -46,7 +46,7 @@
   if (pc < 0)
     return -1;  /* only active lua functions have current-line information */
   else
-    return getline(ci_func(ci)->l.p, pc);
+    return lua_getline(ci_func(ci)->l.p, pc);
 }
 
 
--- moo/moolua/ldebug.h	2008-08-25 01:17:21.000000000 -0500
+++ moo/moolua/ldebug.h	2009-08-01 08:48:54.000000000 -0500
@@ -13,7 +13,7 @@
 
 #define pcRel(pc, p)	(cast(int, (pc) - (p)->code) - 1)
 
-#define getline(f,pc)	(((f)->lineinfo) ? (f)->lineinfo[pc] : 0)
+#define lua_getline(f,pc)	(((f)->lineinfo) ? (f)->lineinfo[pc] : 0)
 
 #define resethookcount(L)	(L->hookcount = L->basehookcount)
 
--- moo/moolua/luaall.c	2008-08-25 01:17:21.000000000 -0500
+++ moo/moolua/luaall.c	2009-08-01 08:53:48.000000000 -0500
@@ -4,6 +4,7 @@
 
 #define luaall_c
 
+#include "lobject.c"
 #include "lapi.c"
 #include "lcode.c"
 #include "ldebug.c"
@@ -13,7 +14,6 @@
 #include "lgc.c"
 #include "llex.c"
 #include "lmem.c"
-#include "lobject.c"
 #include "lopcodes.c"
 #include "lparser.c"
 #include "lstate.c"
--- moo/moolua/lvm.c	2008-08-25 01:17:21.000000000 -0500
+++ moo/moolua/lvm.c	2009-08-01 09:30:55.000000000 -0500
@@ -68,10 +68,10 @@
   if (mask & LUA_MASKLINE) {
     Proto *p = ci_func(L->ci)->l.p;
     int npc = pcRel(pc, p);
-    int newline = getline(p, npc);
+    int newline = lua_getline(p, npc);
     /* call linehook when enter a new function, when jump back (loop),
        or when enter a new line */
-    if (npc == 0 || pc <= oldpc || newline != getline(p, pcRel(oldpc, p)))
+    if (npc == 0 || pc <= oldpc || newline != lua_getline(p, pcRel(oldpc, p)))
       luaD_callhook(L, LUA_HOOKLINE, newline);
   }
 }
